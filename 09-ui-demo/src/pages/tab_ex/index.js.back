/*
* useState만 사용한 경우
*/
import React, { memo, useCallback, useState } from "react";

import styled from "styled-components";

import { tabContent } from "../../dataset";

const TabExContainer = styled.div`
  .tab-button-group {
    border: 1px solid #ccc;
    background-color: #f1f1f1;
    display: flex;

    a {
      padding: 10px 20px;
      display: block;
      text-align: center;
      text-decoration: none;
      color: black;

      &:hover {
        background-color: #ddd;
      }

      &.active {
        background-color: white;
      }
    }
  }

  .tab-page {
    border: 1px solid #ccc;
    padding: 20px;
  }
`;

const TabEx = memo(() => {
  /** 현재 표시되고 있는 탭의 인덱스 번호 */
  const [tabIndex, setTabIndex] = useState(0);

  /** 버튼에 대한 이벤트 처리 함수 */
  const onTabButtonClick = useCallback((e) => {
    e.preventDefault();

    //순서 JS코드인 경우
    // document.querySelectorAll(".tab-button").forEach((v, i) => {
    //   if (e.currentTarget == v) {
    //     v.classList.add("active");
    //   } else {
    //     v.classList.remove("active");
    //   }
    // });

    // 클릭 된 링크의 data-index 속성값을 상태변수에 반영
    const index = e.currentTarget.dataset.index;
    console.log(index);
    setTabIndex(index);
  }, []);

  return (
    <TabExContainer>
      <h2>TabEx</h2>
      {/* Tab버튼 그룹 */}
      <div className="tab-button-group">
        {tabContent.map((v, i) => {
          if (tabIndex == i) {
            return (
              <a key={i} href={`#${v.id}`} data-index={i} className="active tab-button" onClick={onTabButtonClick}>
                {v.subject}
              </a>
            );
          } else {
            return (
              <a key={i} href={`#${v.id}`} data-index={i} className="tab-button" onClick={onTabButtonClick}>
                {v.subject}
              </a>
            );
          }
        })}
      </div>

      {/* Tab 페이지 그룹 */}
      <div className="tab-page">
        <h3>{tabContent[tabIndex].subject}</h3>
        <p>{tabContent[tabIndex].content}</p>
      </div>
    </TabExContainer>
  );
});

export default TabEx;
